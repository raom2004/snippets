* Description
Snippets for Emacs/Yasnippets


* Making the snippets maintainable

The snippets template has two values, a =name= and a =key=, like this:

#+begin_example sh
## -*- mode: snippet -*-
# name:
# key: 
# --
#+end_example

So, each snippet must have a descriptive =name= and a =key= value, like in this example:

#+begin_example sh
## -*- mode: snippet -*-
# name: shebang 
# key: :sd
# --
#+header: :shebang
#+end_example

After create a snippet, we can locate it easily using the =yasnippet menu=, which display a list showing the values of =name= and =key=. However, at the time of editing this snippet, the function =yas-visit-snippet-file= will only shows the value =name=, making difficult to locate a snippet triggered by specific =key=. This situation makes the maintainment of snippets challenging, specially when the snippets become really numerous.

For the exposed above, will be a good idea to have a naming convention to make our snippets more maintainable.

* Snippet Naming

As far as I know, there is no standard convention for snippets naming, but I think that include the value of =key= in the snippets =name=, could be a good idea.

What I propose here is to name the snippets by a =key=, a =__= as a spacer, and a short reference name to describe our snippet.

For example, a snippet called by the key =:sb= and the reference name =:shebang=, should be named like this:

#+begin_example sh
## -*- mode: snippet -*-
# name: :sd__:shebang 
# key: :sd
# --
#+header: :shebang
#+end_example

This way, whe we run the function =yas-visit-snippet-file=, the nale listed will be:

#+begin_example sh
:sd__:shebang
#+end_example

In such case, will be easy to find and edit the snippet triggered by the key =:sb=.


Other examples:

A key =#h= with a reference name =#+header:=, will be named like:

#+begin_example sh
#h__#+header:
#+end_example

Important: notice that the snippets are unique and only share the spacer =__=.

# * Character key conventions for snippeds

# In Emacs is frequent to use =Tab= to indent code lines, practice which can accidentally trigger a snipped, specially if the =key= of a snipped is just a string.

# To avoid such a problem here will be used a prefix symbol followed by characters or strings, e.g. =#h=, , as a convention that can reduce the posibilities to trigger a snipped during line indentation with =Tab=.

# This table recopilate the characters used as prefix for each emacs mode:

# | mode  | prefix |
# |-------+--------|
# | org   | #      |
# | shell | <      |

* Programmatically rename all files in the folder snippeds

This bash script can rename all snippet files using the value of =name=:

#+begin_src bash :results verbatim
#
### CODE
for folder in ~/*/snippets/*; do
  if [[ -d "${folder}" ]]; then
    cd "${folder}"
    for file in *; do
      file_newname=$(awk '/# name/{printf $3}' "${file}")
      if [[ ! "$file" == "$file_newname" ]]; then
	echo "mv $file $file_newname"
	mv "${file}" "${file_newname}"
      fi
    done
  fi
done
#+end_src

