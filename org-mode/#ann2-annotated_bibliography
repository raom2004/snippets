# -*- mode: snippet -*-
# name: annotated_bybliography_#ann2
# key: #ann2
# --

# template #ann2 version: 1.021721

E-UTILITIES REFERENCE MANUAL: [[https://www.ncbi.nlm.nih.gov/books/NBK25501/][E-Utilities help]]

Indexed Fields

#+begin_src bash :results verbatim silent
set -xe
cd ~/edirect

./einfo -db pubmed -fields
#+end_src

Query Checker

#+header: :var query="Manuela Schmidt [AUTH]"
#+begin_src bash :results verbatim silent
# set -xe
cd ~/edirect

./esearch -db pubmed -query "$query"
#+end_src

ORG LATEX ANNOTATED BIBLIOGRAPHY GENERATOR$0
#+header: :var query="Manuela Schmidt [AUTH]"
#+header: :var myfolder=\"${1:`(condition-case nil
(file-name-directory buffer-file-name)
(error (print "/tmp/")))`}\"
#+header: :var file_prefix=\"${2:example}\"
#+header: :tangle /tmp/$2.sh
#+begin_src bash :results verbatim :wrap src org :shebang #!/bin/bash
set -xe
cd ~/edirect

## variable declaration

xml_file=$myfolder$file_prefix-\`date '+%H_%M_%S'\`.xml
# rm -rf $myfolder$file_prefix*.xml
# definitive_file=$myfolder$file_prefix-`date '+%H_%M_%S'`.txt

# download info in xml format

old_xml=$(ls -la $myfolder$file_prefix*.xml | tail -n 1 | awk ' { printf \$9 } ')

if [ -f "$old_xml" ];then
    # if xml file exist, use it 
    xml_file="$old_xml"
fi

./esearch -db pubmed -query "$query" | \
./efetch -format xml > "$xml_file"

printf "** $query [/]\n\n"

./xtract -input "$xml_file" -pattern PubmedArticle \
	 -def " " -VAR1 MedlinePgn \
          -tab "|" -element AbstractText \
	 -block Author -position first -sep "" -tab "|" \
	  -element LastName \
	 -block Author -position first -sep " " -tab "|. and " \
	  -element Initials \
	 -block Author -position inner -sep ", " -tab ". and " \
	  -element LastName,Initials \
	 -block Author -position last -sep ", " -tab ".|" \
	  -element LastName,Initials \
	 -block ArticleTitle \
	  -tab "|" -element ArticleTitle \
	 -block ISOAbbreviation -tab "|" -element ISOAbbreviation \
	 -block PubMedPubDate -if @PubStatus -equals "pubmed" \
	  -tab "|" -element Year \
	 -block Volume -sep "|" -tab "|" -element Volume "&VAR1" \
	 -block ArticleId -if ArticleId@IdType -equals doi \
	  -tab "|" -element ArticleId \
	 -block MedlineCitation -element MedlineCitation/PMID | \
awk -F'|' ' { gsub(" ", "",\$9); printf "*** %s citep:%s%s. pmid:%s. doi:%s. :noexport:\
\n\
,#+begin_src bibtex\n\
@article{%s%s,\n\
author = {%s, %s%s},\n\
title = {{%s}},\n\
journal = {{%s}},\n\
year = {%s},\n\
volume = {%s},\n\
pages = {%s},\n\
doi = {%s}\n\
}\n\
,#+end_src\n\
\n\
# Annotation relevancy:\n\
# [Abstract] %s\n\
[Summary] \n\
[Evaluation] \n\
[Applicability] \n\n\
", \$5, \$2,\$7, \$11,\$10,  \$2,\$7,\$2,\$3,\$4,\$5,\$6,\$7,\$8,\$9,\$10,\$1 }' 
#+end_src
